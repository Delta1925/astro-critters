import m from"fast-glob";import*as s from"fs";var d=async(r,a=2,l="",t,c=async i=>i,p=async i=>await s.promises.readFile(i,"utf-8"))=>{const i=await m(r),e={files:0,total:0};let n=new Set;if(typeof t<"u")if(t instanceof Array||t instanceof Set)for(const o of t)n.add(o);else n.add(t);for(const o of n){if(typeof o=="string")for(const f of i)f.match(o)&&i.splice(i.indexOf(f),1);if(typeof o=="function")for(const f of i)o(f)&&i.splice(i.indexOf(f),1)}for(const o of i)try{const f=await c(await p(o));if(!f)continue;await s.promises.writeFile(o,f,"utf-8"),e.files++}catch(f){console.log(f),console.log(`Error: Cannot inline file ${o}!`)}a>0&&e.files>0&&console.info(`\x1B[32mSuccessfully inlined a total of ${e.files} ${l.toUpperCase()} ${e.files===1?"file":"files"}.\x1B[39m`)};export{d as default};
